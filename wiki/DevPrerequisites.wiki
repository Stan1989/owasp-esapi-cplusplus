#summary Package prerequisites for SafeInt, Crypto++, and Boost
#labels Developer,Prerequisites,Crypto,SafeInt,Boost,Yum,Apt-get

= Introduction =

The following lists some commands to get Crytpo++ and Boost on the system. It assumes GCC/G++, binutils, make, valgrind, libc6-dev, libc6-dbg, and other friends are already installed. Non-GNU system will also need gmake, If using FreeBSD, issue 'pkg_add -r gmake', while OpenBSD should enter 'pkg_add gmake'.

ESAPI uses LeBlanc's SafeInt, Crypto++, and Boost's base installation, regex, and test sub-projects.

A final note on OpenBSD 4.8 and 4.9 (and perhaps others): The default installation ships with GCC 4.2.1, which is broken (see http://gcc.gnu.org/bugzilla/show_bug.cgi?id=21656). You will receive multiple "error: template with C linkage" when using it. Unfortunately, OpenBSD did not take the opportunity to upgrade or patch GCC. Please use a different version of GCC.

== SafeInt ==

SafeInt3.hpp is included in the ESAPI project directory and located in <ESAPI directory>/deps. No action is needed.

== Crypto++ ==

<pre># Debian and friends
$ sudo apt-get install libcrypto++8 libcrypto++8-dbg libcrypto++-dev</pre>

<pre># Fedora and friends
> su -
# yum install cryptopp cryptopp-devel</pre>

<pre># FreeBSD
> su -
# pkg_add -r cryptopp</pre>

OpenBSD does not offer Crypto++. It must be installed from sources. See the Crypto++ website at http://www.cryptopp.com/; and http://www.cryptopp.com/wiki/Linux. The Linux page will take you through building Crypto++ using the makefile.

== Boost ==

<pre># Debian and friends
$ sudo apt-get install libboost-dbg libboost-dev libboost-regex-dev libboost-test-dev libboost-regex-dev</pre>

<pre># Fedora and friends
> su -
# yum install boost-devel</pre>

<pre># FreeBSD
> su -
# pkg_add -r boost-libs</pre>

<pre># OpenBSD
> su -
# pkg_add boost</pre>

== Grepping Package ==

Searching packages can be performed as follows (using boost as an example).

<pre># Debian and friends
$ apt-cache pkgnames | grep -i boost</pre>

<pre># Fedora and friends
> yum search boost | grep -i devel</pre>

== Win32 ==
A version of ESAPI for Windows x86/x64 is available via a Visual Studio 2008 solution file. The Win32 version of ESAPI will build a static version of the library. The Win32 version does not build the self tests due to problems linking against Boost::Test.

The Win32 version of ESAPI is also dependent upon Crypto++ and Boost. The Visual Studio project expects two environmental variables to be set: one for Crypto++ and one for Boost. If you do not have a Crypto++ or Boost environmental variable, see http://technet.microsoft.com/en-us/library/bb726962.aspx and http://support.microsoft.com/kb/310519.

The Crypto++ variable is named 'CRYPTOPP' and should point to the directory containing Crypto++. For example, if Crypto++ is in a folder on the desktop, the envrioment should be 'CRYPTOPP=C:\...\Desktop'. Boost uses the environmental variable 'BOOST', and should include the Boost folder (unlike Crypto++). For example, if Boost is located in 'C:\Program Files\boost\boost_1_47', the envrioment should be 'BOOST=C:\Program Files\boost\boost_1_47'. Note well (N.B.): remember to build the Crypto++ and Boost libraries to avoid linker errors.

The project should convert to VS2010 without trouble. In addition, the project [down] should convert to VS2005 by modifying the solution and project file's headers (its just XML, change the version number). Below Visual Studio 2008 uses Version=9.00. To convert to Visual Studio 2005, change the version to 8.00.

<pre><?xml version="1.0" encoding="Windows-1252"?></pre>
<pre><VisualStudioProject</pre>
<pre>    ProjectType="Visual C++"</pre>
<pre>    Version="9.00"</pre>
<pre>    ...</pre>